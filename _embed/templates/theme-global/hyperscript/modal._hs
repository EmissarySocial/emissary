behavior Modal

	init
		add [@role="dialog"]
		set title to the first <h1,h2,h3/> in me

		if (title is not empty) then
			
			if title.id is empty  then 
				set title.id to "modal-title" 
			end

			set the @aria-labelledby to the title's id
		end

		-- prevent window from scrolling underneath the modal
		set document.body.style.position to "fixed"
		set document.body.style.top to `-${window.scrollY}px`

		wait a tick then
		add .ready to #modal
		focus() the first <[tabindex]/> in me
	end

	on closeModal(nextPage) from window	

		if #modal is empty then 
			exit
		end

		-- reset scroll position
		set scrollY to parseInt(document.body.style.top)
		set document.body.style.position to ""
		set document.body.style.top to ""

		if scrollY is not empty then
			window.scrollTo(0, scrollY * -1)
		end

		-- animate the modal closing
		remove .ready from #modal
		add .closing to #modal
		settle

		-- done
		remove #modal

	end
	
	on click (target)
		if the target's id is "modal-underlay" then
			trigger closeModal
		end
	end

	on keydown[key=="Escape"] from window
		if #modal is not empty then 
			trigger closeModal
			halt the event
		end
	end

	on keydown[key=="Tab"]
		set focusedElement to the first <:focus/>

		if event.shiftKey
			focus() the previous <[tabindex]/> from focusedElement within me with wrapping
		else
			focus() the next <[tabindex]/> from focusedElement within me with wrapping
		end

		halt the event
	end

	on htmx:beforeSwap from window
		if event.detail.target is the first <aside/> then
			make a RegExp from "^<div " called firstDiv
			set event.detail.serverResponse to event.detail.serverResponse.replace(firstDiv, "<div class='ready' ")
		end
	end

	on scroll from window
		if #modal-footer is not empty
			log #modal-footer
		end
	end
end