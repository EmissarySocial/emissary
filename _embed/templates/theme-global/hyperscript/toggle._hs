behavior toggle

    -- Resource for making inclusive toggle buttons
    -- https://www.smashingmagazine.com/2017/09/building-inclusive-toggle-buttons/

    init
        add .toggle-container to me
        add [@role=switch] to me
        add [@tabIndex=0] to me

        tell .toggle in me
            remove yourself
        end

        append `<span class="toggle"><span class="marker"></span></span>` to my innerHTML
        append `<input type="hidden" name="${my @name}" value=""/>` to my innerHTML

        if (my [@text] != "") or (my [@true-text] != "") or (my [@false-text] != "") then
            append `<label></label>` to my innerHTML
        end
        
        send recalculate
        wait a tick
        set my *transition to "background-color 0.1s ease-in-out, border-color 0.1s ease-in-out"
	end

    on mousedown or touchstart
        halt the event
        send toggle
	end

    on keypress[code=="Space"]
        halt the event
        send toggle
	end

    on toggle
		if my @value == "true" then
			trigger setFalse
        else 
			trigger setTrue
        end
	end

	on setTrue
		set my @value to "true"
		send recalculate
		send change
	end

	on setFalse
		set my @value to "false"
		send recalculate
		send change
	end

    on recalculate

        set hidden to first <input[type=hidden]/> in me

        if my @value == "true" then
            set hidden's @value to "true"
            set text to my [@true-text]
            set my [@aria-checked]  to "true"
            
        else 
            set hidden's @value to "false"
            set text to my [@false-text]
            set my [@aria-checked]  to "false"
        end

		if my [@text] is not null then
			set text to my [@text]
		end

        set label to the first <label/> in me

        if the label is not null then
            set the label's innerHTML to the text
        end
	end
end