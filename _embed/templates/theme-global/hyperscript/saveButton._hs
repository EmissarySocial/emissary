behavior SaveButton

	init 
		if :message is not nil then exit end

		set :message to my innerHTML
		set my *width to my offsetWidth px
		set my *overflow-x to hidden

		if my.classList.contains("success")
			set my innerHTML to `<i class="bi bi-check"></i> Saved`
			set my *color to my *computed-color
			set my *background-color to my *computed-background-color
			remove .success
			wait 1.5s
	
			async transition my *backgroundColor to "" over 1s
			transition my *color to "" over 1s
		end

		set my innerHTML to `
			<span class="button-progress"></span>
			<span class="htmx-request-hide">${:message}</span>
			<span class="htmx-request-show"><span class="spin"><i class="bi bi-arrow-clockwise"></i></span> Saving&hellip;</span>
		`
	end

	on htmx:xhr:loadstart from the closest <form/>
		add @disabled to me
	end

	on htmx:xhr:loadend from the closest <form/>
		remove @disabled from me
	end

	on htmx:xhr:progress from the closest <form/>
		log event

		if event.detail.lengthComputable is not true then
			exit
		end

		set progressButton to the first <.button-progress /> in me

		if progressButton is null then
			exit
		end

		log progressButton
		set percentComplete to Math.round((event.detail.loaded / event.detail.total) * 100)
		set the progressButton's *width to percentComplete + "%"
	end
end