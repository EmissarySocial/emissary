# This is a standard Dockerfile for building a Go app.
# It is a multi-stage build: the first stage compiles the Go source into a binary, and
# the second stage copies only the binary into an bookwork base.

#################
# -- Stage 1 -- #
# Compile the app.

FROM golang:1.22.4-bookworm as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN go build -o emissary server.go

#################
# -- Stage 2 -- #
# Create the final environment with the compiled binary.
FROM debian:bookworm-slim

# Install ffmpeg
# This is required for audio/video transcoding
RUN apt-get update -y
RUN apt-get install -y ffmpeg

WORKDIR /app

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/emissary .

# Entrypoint script
ENTRYPOINT [ "/app/emissary" ]
